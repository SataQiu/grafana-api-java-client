plugins {
    id 'java'
    id 'maven'
    id 'org.unbroken-dome.test-sets' version '1.3.2'
    id 'com.diffplug.gradle.spotless' version '3.3.0'
    id 'io.codearte.nexus-staging' version '0.9.0'
    id 'net.researchgate.release' version '2.4.0'
}

group = 'com.appnexus.grafana-client'
description = """A simple java client for interacting with Grafana using a fluent interface"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

ext {
    junitVersion = '4.12'
    jacksonVersion = '2.8.8'
    lombokVersion = '1.16.14'
    retrofitVersion = '2.2.0'
}

testSets {
    integrationTest { dirName = 'integration-test' }
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version: retrofitVersion
    compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version: retrofitVersion

    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    testCompile group: 'junit', name: 'junit', version: junitVersion
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar, sourceJar
}

uploadArchives {
	 repositories {
        mavenDeployer {
            repository(url: "https://repo.ssdc.solutions/repository/maven-releases/") {
                authentication(userName: "admin", password: "admin123")
            }
            pom.version = "ctsi-1.0.6"
            pom.artifactId = "grafana-api-java-client"
            pom.groupId = "com.appnexus.grafana-client"
        }
    }     
}

spotless {
    java {
        googleJavaFormat()
        licenseHeader '/* Licensed under Apache-2.0 */'
    }
}

closeRepository.dependsOn uploadArchives
afterReleaseBuild.dependsOn closeAndReleaseRepository